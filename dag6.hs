main = print (ageNTimes input 18)

input = [2,4,1,5,1,3,1,1,5,2,2,5,4,2,1,2,5,3,2,4,1,3,5,3,1,3,1,3,5,4,1,1,1,1,5,1,2,5,5,5,2,3,4,1,1,1,2,1,4,1,3,2,1,4,3,1,4,1,5,4,5,1,4,1,2,2,3,1,1,1,2,5,1,1,1,2,1,1,2,2,1,4,3,3,1,1,1,2,1,2,5,4,1,4,3,1,5,5,1,3,1,5,1,5,2,4,5,1,2,1,1,5,4,1,1,4,5,3,1,4,5,1,3,2,2,1,1,1,4,5,2,2,5,1,4,5,2,1,1,5,3,1,1,1,3,1,2,3,3,1,4,3,1,2,3,1,4,2,1,2,5,4,2,5,4,1,1,2,1,2,4,3,3,1,1,5,1,1,1,1,1,3,1,4,1,4,1,2,3,5,1,2,5,4,5,4,1,3,1,4,3,1,2,2,2,1,5,1,1,1,3,2,1,3,5,2,1,1,4,4,3,5,3,5,1,4,3,1,3,5,1,3,4,1,2,5,2,1,5,4,3,4,1,3,3,5,1,1,3,5,3,3,4,3,5,5,1,4,1,1,3,5,5,1,5,4,4,1,3,1,1,1,1,3,2,1,2,3,1,5,1,1,1,4,3,1,1,1,1,1,1,1,1,1,2,1,1,2,5,3]

fishcount :: [Int] -> [Int]
fishcount a = [length (filter (== 0) a),length (filter (== 1) a), length (filter (== 2) a), length (filter (== 3) a), length (filter (== 4) a), length (filter (== 5) a), length (filter (== 6) a), length (filter (== 7) a), length (filter (== 8) a)]

ageAllFish :: [Int] -> [Int]
ageAllFish [a,b,c,d,e,f,g,h,i] = [b,c,d,e,f,g,h+a,i,a]
ageAllFish _ = []

fishlist = fishcount input

ageNTimes :: [Int] -> Int -> [Int]
ageNTimes x 0 = x
ageNTimes x n = ageNTimes (ageAllFish x) (n - 1)